// <auto-generated />
using System;
using Bonsai.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bonsai.Migrations
{
    [DbContext(typeof(PantryDbContext))]
    [Migration("20190831130824_UpdatePasswordStorageMethod")]
    partial class UpdatePasswordStorageMethod
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bonsai.Persistence.Model.Item", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BuyDate");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<string>("Name");

                    b.Property<long?>("PantryId");

                    b.HasKey("Id");

                    b.HasIndex("PantryId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Bonsai.Persistence.Model.MealPlan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateFrom");

                    b.Property<DateTime>("DateTo");

                    b.Property<long?>("MealPlanHistoryId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("MealPlanHistoryId");

                    b.ToTable("MealPlans");
                });

            modelBuilder.Entity("Bonsai.Persistence.Model.MealPlanHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("UserDataId");

                    b.HasKey("Id");

                    b.HasIndex("UserDataId")
                        .IsUnique();

                    b.ToTable("MealPlanHistories");
                });

            modelBuilder.Entity("Bonsai.Persistence.Model.Pantry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("UserDataId");

                    b.HasKey("Id");

                    b.HasIndex("UserDataId")
                        .IsUnique();

                    b.ToTable("Pantries");
                });

            modelBuilder.Entity("Bonsai.Persistence.Model.PlannedRecipe", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("MealPlanId");

                    b.Property<DateTime>("PlannedDate");

                    b.Property<string>("PlannedTime")
                        .IsRequired();

                    b.Property<long>("RecipeId");

                    b.HasKey("Id");

                    b.HasIndex("MealPlanId");

                    b.HasIndex("RecipeId");

                    b.ToTable("PlannedRecipes");
                });

            modelBuilder.Entity("Bonsai.Persistence.Model.Recipe", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<long?>("RecipeCatalogId");

                    b.Property<string>("Steps")
                        .HasColumnName("Steps")
                        .HasColumnType("varchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("RecipeCatalogId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("Bonsai.Persistence.Model.RecipeCatalog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("UserDataId");

                    b.HasKey("Id");

                    b.HasIndex("UserDataId")
                        .IsUnique();

                    b.ToTable("RecipeCatalogs");
                });

            modelBuilder.Entity("Bonsai.Persistence.Model.RecipeItem", b =>
                {
                    b.Property<long>("RecipeId");

                    b.Property<long>("ItemId");

                    b.HasKey("RecipeId", "ItemId");

                    b.HasIndex("ItemId");

                    b.ToTable("RecipeItems");
                });

            modelBuilder.Entity("Bonsai.Persistence.Model.UserAccount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired();

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired();

                    b.Property<string>("Username")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("UserAccounts");
                });

            modelBuilder.Entity("Bonsai.Persistence.Model.UserData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("FirstName");

                    b.Property<string>("Gender");

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("UsersData");
                });

            modelBuilder.Entity("Bonsai.Persistence.Model.Item", b =>
                {
                    b.HasOne("Bonsai.Persistence.Model.Pantry")
                        .WithMany("Items")
                        .HasForeignKey("PantryId");

                    b.OwnsOne("Bonsai.Domain.Quantity", "Quantity", b1 =>
                        {
                            b1.Property<long?>("ItemId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<float>("Amount")
                                .HasColumnName("Amount");

                            b1.Property<string>("Unit")
                                .IsRequired()
                                .HasColumnName("Unit");

                            b1.ToTable("Items");

                            b1.HasOne("Bonsai.Persistence.Model.Item")
                                .WithOne("Quantity")
                                .HasForeignKey("Bonsai.Domain.Quantity", "ItemId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("Bonsai.Persistence.Model.MealPlan", b =>
                {
                    b.HasOne("Bonsai.Persistence.Model.MealPlanHistory")
                        .WithMany("MealPlans")
                        .HasForeignKey("MealPlanHistoryId");
                });

            modelBuilder.Entity("Bonsai.Persistence.Model.MealPlanHistory", b =>
                {
                    b.HasOne("Bonsai.Persistence.Model.UserData", "UserData")
                        .WithOne("MealPlanHistory")
                        .HasForeignKey("Bonsai.Persistence.Model.MealPlanHistory", "UserDataId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bonsai.Persistence.Model.Pantry", b =>
                {
                    b.HasOne("Bonsai.Persistence.Model.UserData", "UserData")
                        .WithOne("Pantry")
                        .HasForeignKey("Bonsai.Persistence.Model.Pantry", "UserDataId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bonsai.Persistence.Model.PlannedRecipe", b =>
                {
                    b.HasOne("Bonsai.Persistence.Model.MealPlan", "MealPlan")
                        .WithMany("PlannedRecipes")
                        .HasForeignKey("MealPlanId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bonsai.Persistence.Model.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bonsai.Persistence.Model.Recipe", b =>
                {
                    b.HasOne("Bonsai.Persistence.Model.RecipeCatalog")
                        .WithMany("Recipes")
                        .HasForeignKey("RecipeCatalogId");
                });

            modelBuilder.Entity("Bonsai.Persistence.Model.RecipeCatalog", b =>
                {
                    b.HasOne("Bonsai.Persistence.Model.UserData", "UserData")
                        .WithOne("RecipeCatalog")
                        .HasForeignKey("Bonsai.Persistence.Model.RecipeCatalog", "UserDataId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bonsai.Persistence.Model.RecipeItem", b =>
                {
                    b.HasOne("Bonsai.Persistence.Model.Item", "Item")
                        .WithMany("RecipesUsingThisItem")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bonsai.Persistence.Model.Recipe", "Recipe")
                        .WithMany("ItemsInThisRecipe")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bonsai.Persistence.Model.UserData", b =>
                {
                    b.HasOne("Bonsai.Persistence.Model.UserAccount", "Account")
                        .WithOne("UserData")
                        .HasForeignKey("Bonsai.Persistence.Model.UserData", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
